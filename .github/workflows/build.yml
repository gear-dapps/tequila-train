name: Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-contracts:
    if: false # TODO: Remove
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Artifact cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            contracts -> target

      - name: Remove binaries from cache
        run: rm -vf contracts/target/wasm32-unknown-unknown/release/*.wasm

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: clippy, rustfmt
          target: wasm32-unknown-unknown

      - name: Install binaryen
        run: |
          wget -c https://github.com/WebAssembly/binaryen/releases/download/version_110/binaryen-version_110-x86_64-linux.tar.gz -O - | tar -xz -C .
          sudo cp binaryen-version_110/bin/wasm-opt /usr/bin/

      - name: Check fmt
        if: github.event_name == 'pull_request'
        run: make fmt

      - name: Run linter
        if: github.event_name == 'pull_request'
        run: make lint

      - name: Run tests
        if: github.event_name == 'pull_request'
        run: make test-contracts

      - name: Build
        run: make contracts

      - name: Upload artifacts
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          path: ./contracts/target/wasm32-unknown-unknown/release/*.wasm

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: cd frontend && npm install

      - name: Build
        run: cd frontend && npm run build

      - name: Prepare artifacts
        run: |
          mkdir -p artifact
          cd frontend
          XZ_OPT=-9 tar -cvJf ../artifact/frontend.tar.xz index.html

      - name: Upload artifacts
        #if: github.event_name == 'push' # TODO: Uncomment
        uses: actions/upload-artifact@v3

  upload:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs:
      - build-contracts
      - build-frontend
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Delete previous release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          tag_name: build
          files: artifact/*
